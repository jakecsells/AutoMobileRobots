mutex control;
const int LEFT = 0;
const int RIGHT = 1;
const int BOTH = 2;

sub avoid(int pressed)
{
  OnRev(OUT_AC, 50);
  Wait(500);
  
  switch (pressed)
  {
    case LEFT:
      Off(OUT_A);
      OnFwd(OUT_C, 50);
      Wait(500);
      break;
      
    case RIGHT:
      Off(OUT_C);
      OnFwd(OUT_A, 50);
      Wait(500);
      break;

    case BOTH:
      Off(OUT_C);
      OnFwd(OUT_A, 50);
      Wait(1000);
      break;
    
    default:
  }
}

task check_sensors()
{
  while (true)
  {
    Acquire(control);
    
    if (SENSOR_4 == 1)
    {
      Off(OUT_AC);
      Wait(500);
      
      if (SENSOR_1 == 1)
      {
        avoid(BOTH);
      }
      
      else
      {
        avoid(LEFT);
      }
    }
    
    if (SENSOR_1 == 1)
    {
      Off(OUT_AC);
      Wait(500);
      
      if (SENSOR_4 == 1)
      {
        avoid(BOTH);
      }
      
      else
      {
        avoid(RIGHT);
      }
    }
    
    Release(control);
  }
}

task move_forward()
{
  while (true)
  {
    Acquire(control);
    OnFwd(OUT_AC, 50);
    Release(control);
  }
}

task main()
{
  Precedes(check_sensors, move_forward);
  SetSensorTouch(IN_1);
  SetSensorTouch(IN_4);
}
